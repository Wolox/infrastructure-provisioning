resource "null_resource" "billing-report-parser" {
  provisioner "local-exec" {
    command = "cd ./billing/billing-report-parser && npm install && cd -"
  }
  triggers = {
    policy_sha1 = "${sha1(file("./billing/billing-report-parser/package.json"))}"
  }
}


data "archive_file" "billing-report-parser" {
    type        = "zip"
    source_dir  = "./billing/billing-report-parser"
    output_path = "billing-report-parser.zip"
    depends_on = ["null_resource.billing-report-parser"]
}

resource "aws_lambda_function" "billing-report-parser" {
  filename         = "billing-report-parser.zip"
  function_name    = "billing-report-parser"
  role             = "${aws_iam_role.billing-report-parser-role.arn}"
  handler          = "index.handler"
  runtime          = "nodejs4.3"
  source_code_hash = "${data.archive_file.billing-report-parser.output_base64sha256}"
}

resource "aws_lambda_permission" "allow_bucket" {
  statement_id  = "AllowExecutionFromS3Bucket"
  action        = "lambda:InvokeFunction"
  function_name = "${aws_lambda_function.billing-report-parser.arn}"
  principal     = "s3.amazonaws.com"
  source_arn    = "${aws_s3_bucket.<%= @bucket_name %>.arn}"
}

resource "aws_s3_bucket_notification" "bucket_notification" {
  bucket = "${aws_s3_bucket.<%= @bucket_name %>.id}"

  lambda_function {
    lambda_function_arn = "${aws_lambda_function.billing-report-parser.arn}"
    events              = ["s3:ObjectCreated:*"]
    filter_suffix       = ".gz"
  }
}
